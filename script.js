function createStars() {
  const starsContainer = document.querySelector('.snow-container');
  const numberOfStars = 100;

  for (let i = 0; i < numberOfStars; i++) {
    const star = document.createElement('div');
    star.classList.add('star');
    star.style.left = Math.random() * 100 + '%';
    star.style.top = Math.random() * 60 + '%'; // Ch·ªâ ·ªü n·ª≠a tr√™n m√†n h√¨nh
    star.style.animationDelay = Math.random() * 2 + 's';
    starsContainer.appendChild(star);
  }
}

// G·ªçi h√†m t·∫°o sao khi trang web load
createStars();

function createSnow() {
  const snowContainer = document.querySelector('.snow-container');
  const snow = document.createElement('div');
  snow.classList.add('snow');

  // V·ªã tr√≠ ng·∫´u nhi√™n theo chi·ªÅu ngang
  snow.style.left = Math.random() * 100 + '%';

  // T·ªëc ƒë·ªô r∆°i v√† k√≠ch th∆∞·ªõc ng·∫´u nhi√™n
  const duration = Math.random() * 5 + 5;
  const size = Math.random() * 3 + 2;

  snow.style.width = size + 'px';
  snow.style.height = size + 'px';
  snow.style.opacity = Math.random() * 0.7 + 0.3;

  // Th√™m animation
  snow.style.animation = `fall ${duration}s linear`;

  snowContainer.appendChild(snow);

  // X√≥a b√¥ng tuy·∫øt sau khi r∆°i xong
  setTimeout(() => {
    snow.remove();
  }, duration * 1000);
}

// C·∫≠p nh·∫≠t keyframes animation
const style = document.createElement('style');
style.textContent = `
  @keyframes fall {
    from {
      transform: translateY(-10px);
    }
    to {
      transform: translateY(100vh);
    }
  }
  
  @keyframes sway {
    from {
      transform: translateX(-15px);
    }
    to {
      transform: translateX(15px);
    }
  }
`;
document.head.appendChild(style);

// T·∫°o tuy·∫øt v·ªõi t·∫ßn su·∫•t th·∫•p h∆°n
setInterval(createSnow, 200);

// Th√™m v√†o cu·ªëi file
const musicBtn = document.querySelector('.music-toggle');
const audio = document.getElementById('bgMusic');

musicBtn.addEventListener('click', () => {
  if (audio.paused) {
    audio.play();
    musicBtn.textContent = 'üîä';
  } else {
    audio.pause();
    musicBtn.textContent = 'üîà';
  }
});

// Th√™m hi·ªáu ·ª©ng di chuy·ªÉn cho √¥ng gi√† Noel
function moveSanta() {
  const santaContainer = document.querySelector('.santa-container');

  // Reset v·ªã tr√≠ khi √¥ng gi√† Noel bay ra kh·ªèi m√†n h√¨nh
  setInterval(() => {
    const rect = santaContainer.getBoundingClientRect();
    if (rect.left > window.innerWidth) {
      santaContainer.style.left = '-200px';
    }
  }, 100);
}

// G·ªçi h√†m di chuy·ªÉn √¥ng gi√† Noel
moveSanta();

function createGift() {
  const gift = document.createElement('div');
  gift.classList.add('gift');

  // V·ªã tr√≠ ng·∫´u nhi√™n theo chi·ªÅu ngang
  const randomX = Math.random() * (window.innerWidth - 40); // Tr·ª´ ƒëi k√≠ch th∆∞·ªõc gift
  gift.style.left = randomX + 'px';
  gift.style.top = '-50px';

   // M·∫£ng h√¨nh ·∫£nh k√®m ch·ªØ
   const gifts = [
    { image: './Untitled.png', text: 'üéâ B·∫°n nh·ªè nh·∫≠n ƒë∆∞·ª£c m·ªôt m√≥n qu√† ƒë·∫∑c bi·ªát!' },
    { image: './loopy.png', text: 'üéÅ Loopy ch√∫c b·∫°n nh·ªè gi√°ng sinh vui v·∫ª. ·∫§n t√≠p nha!' },
    { image: './A.jpg', text: 'Thi t·ªët nh√° ü§©. Ch∆∞a h·∫øt qu√† ƒë√¢u n√®!' },
    { image: './debug.jpg', text: 'Ch√∫c b·∫°n nh·ªè gi√°ng sinh khong c√¥ ƒë∆°n ü•≥. C√°i ni thi·∫øu special!' },
    { image: './√¥m.jpg', text: 'T·∫∑ng c√°i √¥m n√® ü´Ç. C≈©ng ch∆∞a ph·∫£i...' },
  ];
  const gifts1 = [
    { image: './puddle.jpg', text: 'Ng√†y 25 m·ªõi c√≥ qu√† c∆° ü•≤' },
    { image: './phim.jpg', text: 'B·∫°n nh·ªè xem Beauty and the beast ƒë·ªÉ ch·ªù nha üìΩÔ∏è' },
    { image: './nhac.png', text: ' Nghe nh·∫°c cho ƒë·ª° bu·ªìn nhe üéß' },
    { image: './nhac1.png', text: 'üéÑ B√†i ni hay l·∫Øm' },
    { image: './macam.jpg', text: 'M·∫∑c ·∫•m ƒë·ªÉ ƒëi ch∆°i nhaaa üß•' },
  ];
  gift.addEventListener('click', () => {
    const popup = document.createElement('div');
    popup.classList.add('gift-popup');
    const now = new Date();
    if (now.getMonth() === 11 && now.getDate() === 25) {
      // Ch·ªçn ng·∫´u nhi√™n m·ªôt h√¨nh ·∫£nh v√† ch·ªØ
      const selectedGift = gifts[Math.floor(Math.random() * gifts.length)];

      // T·∫°o ph·∫ßn t·ª≠ h√¨nh ·∫£nh
      const img = document.createElement('img');
      img.src = selectedGift.image;
      img.alt = 'Gift';
      img.style.width = '150px'; // K√≠ch th∆∞·ªõc nh·ªè
      img.style.height = 'auto';

      // T·∫°o ph·∫ßn t·ª≠ ch·ªØ
      const text = document.createElement('p');
      text.textContent = selectedGift.text;
      text.style.marginTop = '10px'; // Kho·∫£ng c√°ch gi·ªØa ·∫£nh v√† ch·ªØ
      text.style.fontSize = '14px';
      text.style.color = '#333';
      text.style.textAlign = 'center';
      text.style.fontFamily = '"Times New Roman", Times, serif';

      popup.appendChild(img);
      popup.appendChild(text);

      document.body.appendChild(popup);
      popup.style.display = 'block';

      // Hi·ªáu ·ª©ng √¢m thanh khi m·ªü qu√†
      const unwrapSound = new Audio('unwrap.mp3');
      unwrapSound.play();

      // Hi·ªÉn th·ªã popup trong 5 gi√¢y
      setTimeout(() => {
        popup.style.display = 'none';
        popup.remove();
      }, 5000); // 3 gi√¢y
    } else {
      // Ch·ªçn ng·∫´u nhi√™n m·ªôt h√¨nh ·∫£nh v√† ch·ªØ
      const selectedGift = gifts1[Math.floor(Math.random() * gifts.length)];

      // T·∫°o ph·∫ßn t·ª≠ h√¨nh ·∫£nh
      const img = document.createElement('img');
      img.src = selectedGift.image;
      img.alt = 'Gift';
      img.style.width = '150px'; // K√≠ch th∆∞·ªõc nh·ªè
      img.style.height = 'auto';

      // T·∫°o ph·∫ßn t·ª≠ ch·ªØ
      const text = document.createElement('p');
      text.textContent = selectedGift.text;
      text.style.marginTop = '10px'; // Kho·∫£ng c√°ch gi·ªØa ·∫£nh v√† ch·ªØ
      text.style.fontSize = '14px';
      text.style.color = '#333';
      text.style.textAlign = 'center';
      text.style.fontFamily = '"Times New Roman", Times, serif';

      popup.appendChild(img);
      popup.appendChild(text);

      document.body.appendChild(popup);
      popup.style.display = 'block';

      // Hi·ªáu ·ª©ng √¢m thanh khi m·ªü qu√†
      const unwrapSound = new Audio('unwrap.mp3');
      unwrapSound.play();

      // Hi·ªÉn th·ªã popup trong 5 gi√¢y
      setTimeout(() => {
        popup.style.display = 'none';
        popup.remove();
      }, 3000); // 3 gi√¢y
    }

    

    gift.remove();
  });

  document.body.appendChild(gift);

  // Animation r∆°i m∆∞·ª£t m√† h∆°n
  let pos = -50;
  let speed = 1;
  const maxSpeed = 3;
  const acceleration = 0.05;

  const fall = setInterval(() => {
    speed = Math.min(speed + acceleration, maxSpeed);
    pos += speed;
    gift.style.top = pos + 'px';

    // Ki·ªÉm tra va ch·∫°m v·ªõi ƒë√°y m√†n h√¨nh
    if (pos > window.innerHeight) {
      clearInterval(fall);
      gift.remove();
    }
  }, 20);
}


// Gi·∫£m t·∫ßn su·∫•t t·∫°o qu√†
setInterval(createGift, 1000); // 8 gi√¢y m·ªôt l·∫ßn

function addTreeLights() {
  const tree = document.querySelector('.tree');
  const colors = ['#ff0', '#f00', '#0f0', '#00f', '#ff0'];

  for (let i = 0; i < 20; i++) {
    const light = document.createElement('div');
    light.classList.add('light');
    light.style.background = colors[Math.floor(Math.random() * colors.length)];
    light.style.left = Math.random() * 100 + '%';
    light.style.top = Math.random() * 100 + '%';
    light.style.animationDelay = Math.random() * 2 + 's';
    tree.appendChild(light);
  }
}

function updateCountdown() {
  const christmas = new Date(new Date().getFullYear(), 11, 25);
  const now = new Date();
  const diff = christmas - now;

  const days = Math.floor(diff / (1000 * 60 * 60 * 24));
  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
  const seconds = Math.floor((diff % (1000 * 60)) / 1000);
  if (diff<=0) {
    document.getElementById('countdown').textContent = 'Merry Christmas!';
    return;
  }
  document.getElementById('days').textContent = days
    .toString()
    .padStart(2, '0');
  document.getElementById('hours').textContent = hours
    .toString()
    .padStart(2, '0');
  document.getElementById('minutes').textContent = minutes
    .toString()
    .padStart(2, '0');
  document.getElementById('seconds').textContent = seconds
    .toString()
    .padStart(2, '0');
}

setInterval(updateCountdown, 1000);

// Hi·ªáu ·ª©ng m√¢y tr√¥i
function animateClouds() {
  const clouds = document.querySelectorAll('.cloud');
  clouds.forEach((cloud, index) => {
    cloud.style.animation = `float ${15 + index * 2}s linear infinite`;
    cloud.style.top = `${index * 15}%`;
  });
}

// Hi·ªáu ·ª©ng ph√°o hoa
function createFirework(x, y) {
  const colors = ['#ff0', '#ff4', '#4ff', '#f4f', '#4f4'];
  const particles = 30;
  const container = document.querySelector('.fireworks-container');

  // Gi·ªõi h·∫°n t·ªça ƒë·ªô y trong ph·∫°m vi container
  const containerRect = container.getBoundingClientRect();
  y = Math.min(y, containerRect.height);

  for (let i = 0; i < particles; i++) {
    const particle = document.createElement('div');
    particle.className = 'firework-particle';
    particle.style.backgroundColor =
      colors[Math.floor(Math.random() * colors.length)];

    const angle = (i * 360) / particles;
    const velocity = 2 + Math.random() * 2;

    particle.style.left = x + 'px';
    particle.style.top = y + 'px';

    container.appendChild(particle);

    const rad = (angle * Math.PI) / 180;
    const vx = Math.cos(rad) * velocity;
    const vy = Math.sin(rad) * velocity;

    let posX = x;
    let posY = y;

    const animate = () => {
      posX += vx;
      posY += vy;

      // Gi·ªõi h·∫°n ph·∫°m vi di chuy·ªÉn trong container
      if (
        posX < 0 ||
        posX > containerRect.width ||
        posY < 0 ||
        posY > containerRect.height
      ) {
        particle.remove();
        return;
      }

      particle.style.left = posX + 'px';
      particle.style.top = posY + 'px';

      requestAnimationFrame(animate);
    };

    animate();
  }
}

// Hi·ªáu ·ª©ng particle khi di chu·ªôt
function createParticle(e) {
  const particle = document.createElement('div');
  particle.className = 'mouse-particle';
  particle.style.left = e.pageX + 'px';
  particle.style.top = e.pageY + 'px';
  document.body.appendChild(particle);

  setTimeout(() => particle.remove(), 1000);
}

// Th√™m t∆∞∆°ng t√°c v·ªõi c√¢y th√¥ng
function addTreeInteraction() {
  const tree = document.querySelector('.tree');
  const bells = document.querySelectorAll('.bell');

  tree.addEventListener('click', () => {
    tree.classList.add('shake');

    // Th√™m hi·ªáu ·ª©ng rung cho chu√¥ng
    bells.forEach((bell) => {
      bell.style.animation = 'none';
      bell.offsetHeight; // Trigger reflow
      bell.style.animation = 'bellRing 0.5s';
    });

    setTimeout(() => {
      tree.classList.remove('shake');
      bells.forEach((bell) => {
        bell.style.animation = 'bellRing 2s infinite';
      });
    }, 500);
  });
}

// Th√™m h√†m trang tr√≠ c√¢y th√¥ng m·ªõi
function decorateTree() {
  const tree = document.querySelector('.tree');
  const layers = document.querySelectorAll('.tree-layer');

  // Th√™m chu√¥ng
  const bellPositions = [
    { left: '40%', top: '20%' },
    { right: '20%', top: '40%' },
    { left: '30%', top: '60%' },
    { right: '25%', top: '70%' },
  ];

  bellPositions.forEach((pos) => {
    const bell = document.createElement('div');
    bell.className = 'bell';
    Object.assign(bell.style, pos);
    tree.appendChild(bell);
  });

  // Th√™m c√°c qu·∫£ ch√¢u
  const colors = ['red', 'gold', 'silver'];
  layers.forEach((layer) => {
    const layerRect = layer.getBoundingClientRect();
    const numOrnaments = 8;

    for (let i = 0; i < numOrnaments; i++) {
      const ornament = document.createElement('div');
      ornament.className = `ornament ${
        colors[Math.floor(Math.random() * colors.length)]
      }`;

      // V·ªã tr√≠ ng·∫´u nhi√™n trong ph·∫°m vi c·ªßa t·∫ßng
      const left = 20 + Math.random() * 60; // 20% ƒë·∫øn 80%
      const top = 20 + Math.random() * 60; // 20% ƒë·∫øn 80%

      ornament.style.left = `${left}%`;
      ornament.style.top = `${top}%`;

      layer.appendChild(ornament);
    }
  });

  // Th√™m hi·ªáu ·ª©ng l·∫•p l√°nh
  const lights = 30;
  for (let i = 0; i < lights; i++) {
    const light = document.createElement('div');
    light.className = 'light';
    light.style.left = `${Math.random() * 100}%`;
    light.style.top = `${Math.random() * 100}%`;
    light.style.animationDelay = `${Math.random() * 2}s`;
    light.style.background = `hsl(${Math.random() * 360}, 100%, 70%)`;
    tree.appendChild(light);
  }
}

// Kh·ªüi t·∫°o c√°c hi·ªáu ·ª©ng
document.addEventListener('DOMContentLoaded', () => {
  const treeImage = document.querySelector('.tree img'); // Gi·∫£ s·ª≠ ·∫£nh c√¢y th√¥ng n·∫±m trong class .tree

  // N·∫øu ·∫£nh ƒë√£ load xong
  if (treeImage.complete) {
    decorateTree();
    addTreeLights();
  } else {
    // N·∫øu ·∫£nh ch∆∞a load xong, ƒë·ª£i s·ª± ki·ªán load
    treeImage.addEventListener('load', () => {
      decorateTree();
      addTreeLights();
    });
  }

  // C√°c hi·ªáu ·ª©ng kh√°c v·∫´n gi·ªØ nguy√™n
  animateClouds();
  addTreeInteraction();

  document.addEventListener('click', (e) => {
    createFirework(e.pageX, e.pageY);
    createParticle(e);
  });

  document.addEventListener('mousemove', (e) => {
    if (Math.random() < 0.1) {
      createParticle(e);
    }
  });
});
